{}{	File: ObjIntf.p}{		}{	Copyright Symantec Corporation 1988}{	Copyright Apple Computer, Inc. 1986-1987}{	All rights reserved.}{}unit ObjIntf;interface	type		CObject = object				function ShallowClone: CObject;			{Lowest level method for copying an object; should not be overridden}{				except in very unusual cases.  Simply calls HandToHand to copy}{				the object data.}				function Clone: CObject;			{Defaults to calling ShallowClone; can be overridden to copy objects}{				refered to by fields.}				procedure ShallowFree;			{Lowest level method for freeing an object; should not be overridden}{				except in very unusual cases.  Simply calls DisposHandle to}{				free the object data.}				procedure Free;			{Defaults to calling ShallowFree; can be overridden to free objects }{				refered to by fields.}			end;implementation	function CObject.ShallowClone;		var			result: Handle;	begin		result := Handle(SELF);		if HandToHand(result) <> noErr then			begin      			{ report some sort of error? }				result := nil			end;		ShallowClone := CObject(result);	end;	function CObject.Clone;	begin		Clone := SELF.ShallowClone;	end;	procedure CObject.ShallowFree;	begin		DisposHandle(Handle(SELF));	end;	procedure CObject.Free;	begin		SELF.ShallowFree;	end;end.