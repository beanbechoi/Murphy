unit CPlayer;interface	uses		infoIntf;implementation	procedure CPlayer.ChooseLevel;		var			ignore: boolean;	begin		if LevelChoice(level, skippedLev, highLev, current, numSkipped, CInfoApp(GAPPLIcatION).gLevelDial) then			begin				CInfoApp(gappliCATion).GetGPane.GetBoard.KillData;				ignore := CInfoApp(gappliCATion).GetGPane.GetBoard.LoadBoard(level);				CInfoApp(gappliCATion).GetGPane.GetBPane.GotNewBoard;				SavePlayer;			end;	end;	function ResName (typ: ResType; num: integer): Str255;		var			h: Handle;			d: integer;			name: Str255;	begin		name := '';		h := GetResource(typ, num);		if (h <> nil) and (ResError = noErr) then			begin				getResInfo(h, d, typ, name);				ReleaseResource(h);			end;		ResName := name;	end;	procedure CPlayer.INewPlayer (aName: str255);		var			appStat: InfoStatus;	begin		name := aName;		level := ResName(levelResType, 301);		{the first level}		skippedLev := [];		highLev := 1;		current := 1;		numSkipped := 0;		time := 0;		CInfoApp(gapplication).GetMurphy.Init;		appStat := CInfoApp(Gapplication).GetInfoStatus;		CInfoApp(gappliCATion).SetInfoStatus(appStat + [hasPlayer]);		CInfoApp(GApplication).getGPane.setTheBoxes;	end;	procedure CPlayer.RenamePlayer;		var			dname: Str255;			data: Handle;			oldName: str255;	begin		oldName := name;		if GetWinName(dname, CInfoAPp(gapplicatioN).gRenDial) then			begin				name := dname;				data := GetNamedResource(playerResType, oldName);				if (ResError = noErr) and (data <> nil) then					begin						RmveResource(data);						ReleaseResource(data);					end;				SavePlayer;				CInfoApp(GApplication).getGPane.setTheBoxes;			end;	end;	procedure CPlayer.openPlayer;		var			data: handle;			theName: Str255;			playerData: PlayerType;			appState: InfoStatus;			ignore: boolean;	begin		if OpenChoice(theName, CInfoApp(gApplication).gOpenDial) then			begin				data := GetNamedResource(playerResType, theName);				if (ResError = noErr) and (data <> nil) then					begin						DetachResource(data);						playerData := PlayerHandle(data)^^;						appState := CInfoApp(gAPplication).GetInfoStatus;						CInfoApp(gAPplication).SetInfoStatus(appState + [hasPlayer]);						DisposeHandle(data);						skippedLev := playerData.skippedLev;						highLev := playerData.highLev;						current := playerData.current;						numskipped := playerData.numSkipped;						name := playerData.name;						if name = 'Q42QaardvarkQ' then							highLev := Count1Resources(levelResType);						level := playerData.level;						time := playerData.time;						CInfoApp(gapplication).GetMurphy.Init;						CInfoApp(gApplication).GetGPane.GetBoard.KillData;						ignore := CInfoApp(gApplication).GetGPane.GetBoard.LoadBoard(level);						CInfoApp(gApplication).GetGPane.GetBPane.GotNewBoard;					end;				CInfoApp(GApplication).getGPane.setTheBoxes;			end;	end;	procedure CPlayer.savePlayer;		var			data: handle;			tempData: handle;			c, x: integer;	begin		tempData := GetNamedResource(playerResType, name);		if (tempData <> nil) and (resError = noErr) then			begin				RmveResource(tempData);				ReleaseResource(tempData);			end;		data := NewHandleClear(sizeOf(PlayerType));		PlayerHandle(data)^^.skippedLev := skippedLev;		PlayerHandle(data)^^.highLev := highLev;		PlayerHandle(data)^^.current := current;		PlayerHandle(data)^^.numskipped := numskipped;		PlayerHandle(data)^^.name := name;		PlayerHandle(data)^^.level := level;		PlayerHandle(data)^^.time := time;		AddResource(data, playerResType, uniqueID(playerResType), name);		WriteResource(data);		ChangedResource(data);		ReleaseResource(data);		UpdateResFile(CurResFile);		x := Count1Resources(playerResType);		for c := 1 to x do			begin				tempData := GetIndResource(playerResType, c);		{Get each resource, and release it}				ReleaseResource(tempData);									{Thereby forcing an instantaneous update...}			end;		UpdateResFile(CurResFile);	end;	procedure CPlayer.setName (n: str255);	begin		name := n;		CInfoApp(GApplication).getGPane.setTheBoxes;	end;	function CPlayer.getName: str255;	begin		getName := name;	end;	procedure CPlayer.setLevelName (n: str255);	begin		level := n;		CInfoApp(GApplication).getGPane.setTheBoxes;	end;	function CPlayer.getLevelName: str255;	begin		getLevelName := level;	end;	procedure CPlayer.setLevelNum (n: integer);	begin		current := n;		CInfoApp(GApplication).getGPane.setTheBoxes;	end;	function CPlayer.getLevelNum: integer;	begin		getLevelNum := current;	end;end.