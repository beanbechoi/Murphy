unit BackManagerIntf;interface	type		TaskType = (fall, checkFall, explode, animate);		StateType = (doIt, standby);		TaskData = record				what: TaskType;				x, y: integer;		{where the task must occurr}{for animate tasks}				startAnim, numAnim: integer;{INTERNAL USE ONLY}{info about task}				state: StateType;				standbyFor: integer;				taskMarker: integer;			{a unique integer which defines each task}				taskState: integer;			{these last two are here just in case we need scratch room}				miscData: longint;			end;		TaskList = array[1..100] of TaskData;		CBackMgr = object(cobject)			{This one is tricky}				list: TaskList;				numTasks: integer;				curTask: integer;		{which task is being worked on}				nextNewTaskNum: integer;		{what will its marker be?}				procedure IBackMgr;				procedure InstallTask (task: taskData);			end;implementationend.