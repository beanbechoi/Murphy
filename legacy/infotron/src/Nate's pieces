type	CTerminal = object(CGridPiece)			termAnim: animSeries;			procedure init;			override;		end;procedure CTerminal.init;var	c: integer;begin	inherited init;	destructable := true;	for c := 1 to 11 do		termAnim[c] := 549 + c;end;{-------------------------------}type	CBug = object(CExplodes)			bugAnim: animSeries;			procedure init;			override;		end;procedure CBug.init;begin	inherited init;	destructable := true;	bugAnim[1] := 301;	bugAnim[2] := 302;	bugAnim[3] := 303;	bugAnim[4] := 304;	bugAnim[5] := 303;	bugAnim[6] := 302;	bugAnim[7] := 303;	bugAnim[8] := 302;	bugAnim[9] := 301;	bugAnim[10] := 302;	bugAnim[11] := 303;	bugAnim[12] := 304;	bugAnim[13] := 303;	bugAnim[14] := 302;	bugAnim[15] := 303;	bugAnim[16] := 302;	bugAnim[17] := 301;	bugAnim[18] := 300;	bugAnim[19] := 128;end;{-------------------------------}type	CPortal = object(CGridPiece)			procedure init;		end;procedure CPortal.init;begin	inherited init;	destructable := true;end;{-------------------------------}type	CHardware = object(CGridPiece)			procedure init;		end;procedure CHardware.init;begin	inherited init;end;{-------------------------------}type	CChip = object(CGridPiece)			procedure init;		end;procedure CChip.init;begin	inherited init;	rounded := true;	destructable := true;end;{-------------------------------}