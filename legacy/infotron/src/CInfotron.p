unit CInfotron;interface	uses		TCL, GridPieceintf;implementation	procedure CInfotron.InitPiece;	begin		inherited InitPiece;		rounded := true;		destructable := true;	end;	procedure CInfotron.Roll (x, y, dir: integer);		var			fallDir: integer;			myChore: CMoveChore;			whereTo: point;			what: integer;	begin		if dir = kLeft then			falldir := kDownLeft		else			fallDir := kDownRight;{whereTo := CInfoApp(gapplication).LocFromDir(x, y, fallDir);}{    what := CInfoApp(gapplication).GetGPane.GetBoard.GetData(whereTo.h, whereTo.v);}{    if not CInfoApp(gapplication).HasSuicide[x, y] then}{begin}		new(myChore);		myChore.IMoveChore(fallDir, fallDir, infotron, x, y);		CInfoApp(gApplication).FudADD(myChore);{    end;}	end;	function CInfotron.WalkOnto (x, y: integer): boolean;	begin		WalkOnto := true;		CInfoApp(CInfoApp(gApplication)).GetMurphy.GotInfotron;	end;end.