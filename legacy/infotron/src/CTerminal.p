unit CTerminal;interface	uses		TCL, GridPieceIntf;implementation	procedure CTerminal.InitPiece;		var			c: integer;	begin		inherited InitPiece;		destructable := true;		for c := 1 to 11 do			termAnim[c] := 549 + c;	end;	procedure CTerminal.Make (x, y: integer);		var			myChore: CContAnimChore;	begin		new(myChore);		myChore.IContAnimChore(0, termAnim, 11, 0, x, y);		CInfoApp(gApplication).FudADD(myChore);	end;	function CTerminal.WalkOnto (x, y: integer): boolean;		var			sizeX, sizeY: integer;			cx, cy: integer;	begin		WalkOnto := FALSE;		CInfoApp(gApplication).GetGPane.GetBoard.GetSize(sizeX, sizeY);		for cx := 1 to sizeX do			for cy := 1 to sizeY do				if CInfoApp(gApplication).GetGPane.GetBoard.GetData(cx, cy) = 134 then					CInfoApp(gApplication).GetGridObj(cx, cy).Explode(cx, cy);	end;end.