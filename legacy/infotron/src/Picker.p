{	This file has been processed by The THINK Pascal Source Converter, v1.1.	}{}{Created: Friday, October 20, 1989 at 8:56 AM}{	Picker.p}{	Pascal Interface to the Macintosh Libraries}{}{	Copyright Apple Computer, Inc.	1987-1989}{	All rights reserved}{}unit Picker;interface	const		MaxSmallFract = $0000FFFF;		{Maximum small fract value, as long}	type		SmallFract = INTEGER;		HSVColor = record				hue: SmallFract;			{Fraction of circle, red at 0}				saturation: SmallFract; 	{0-1, 0 for gray, 1 for pure color}				value: SmallFract;			{0-1, 0 for black, 1 for max intensity}			end;{ For developmental simplicity in switching between the HLS and HSVmodels, HLS}{ is reordered into HSL.  Thus both models start with hue and saturation values;}{ value/lightness/brightness is last.}		HSLColor = record				hue: SmallFract;			{Fraction of circle, red at 0}				saturation: SmallFract; 	{0-1, 0 for gray, 1 for pure color}				lightness: SmallFract;		{0-1, 0 for black, 1 for white}			end;		CMYColor = record				cyan: SmallFract;				magenta: SmallFract;				yellow: SmallFract;			end;	function Fix2SmallFract (f: Fixed): SmallFract;	inline		$3F3C, $0001, $A82E;	function SmallFract2Fix (s: SmallFract): Fixed;	inline		$3F3C, $0002, $A82E;	procedure CMY2RGB (cColor: CMYColor; var rColor: RGBColor);	inline		$3F3C, $0003, $A82E;	procedure RGB2CMY (rColor: RGBColor; var cColor: CMYColor);	inline		$3F3C, $0004, $A82E;	procedure HSL2RGB (hColor: HSLColor; var rColor: RGBColor);	inline		$3F3C, $0005, $A82E;	procedure RGB2HSL (rColor: RGBColor; var hColor: HSLColor);	inline		$3F3C, $0006, $A82E;	procedure HSV2RGB (hColor: HSVColor; var rColor: RGBColor);	inline		$3F3C, $0007, $A82E;	procedure RGB2HSV (rColor: RGBColor; var hColor: HSVColor);	inline		$3F3C, $0008, $A82E;	function GetColor (where: Point; prompt: Str255; inColor: RGBColor; var outColor: RGBColor): BOOLEAN;	inline		$3F3C, $0009, $A82E;    { UsingPicker }implementationend.