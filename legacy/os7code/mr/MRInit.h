// Murphy's Revenge// (c)1997 Q Software / Dave Peck, All Rights Reserved// This source code is confidential and proprietary, and may not be reproduced// or utilized by anyone without the express written permission of Q Software.// File: MRInit.h// Auth: Dave Peck	// Date: 6/10/97// Desc: Headers for init/deinit code.// ----------------------------------------------------------------// Includes// ----------------------------------------------------------------// ----------------------------------------------------------------// Constants// ----------------------------------------------------------------#define DEV_NOTICE			1#define NO_GAMMA_FADES		0#define kFailureReasonLength	120#define kMinimumWidth			640#define kMinimumHeight			480#define kMinimumDepth			8#define kDepthChangeDlogID		7000#define kResChangeDlogID		8000#define kGammaFadeDlogID		9000#define kDepthChangeYes			1#define kDepthChangeNo			2#define kDepthChangeCheckBox	3#define kMainWindID				1000#define kBringToFront			(WindowPtr)-1L// ----------------------------------------------------------------// Data Structures// ----------------------------------------------------------------// ----------------------------------------------------------------// Function Prototypes// ----------------------------------------------------------------// Get a C string indicating the reason for failure.char* FailureReason();// Um, makes sure stuff that needs to be there is there, // you 3|33+ d00dBoolean CheckForDataFiles();// Can we use this mac? If not, exit with false.Boolean CheckMachineAbilities();// Get ready to use MR on this mac.Boolean InitMurphysRevenge();// Close all necessary drivers & release all allocated memory.void CleanUpForExit();// for finding out about the monitor!Rect GetMonitorRect();// make a monitor-sized window:WindowPtr MakeMonitorWind();// yo! change that resolution - but only if the user wants.Boolean VideoSettingsQuery();// when the user quits, put the screen's resolution back to whatever it wasvoid VideoSettingsRevert();// so you can play with the control stripvoid HideControlStrip();void ShowControlStrip();// if DEV_NOTICE is 1, pops up dialog to this effect.void DevelopmentNotice();	// ----------------------------------------------------------------// Functions// ----------------------------------------------------------------