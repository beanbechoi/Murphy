// Murphy's Revenge// (c)1997 Q Software / Dave Peck, All Rights Reserved// This source code is confidential and proprietary, and may not be reproduced// or utilized by anyone without the express written permission of Q Software.// File: MRMemoryDebug.h// Auth: Dave Peck// Date: 7/2/98// Desc: I found a big leak by hand today. I'd better write this.//       This code will (1) profile memory leaks and (2) report any//       serious double-deallocs. (Well, if I get around to both.)// -----------------------------------------------------------------------------// Includes// -----------------------------------------------------------------------------#include <Types.h>#include <Memory.h>#include <Quickdraw.h>#include <TextEdit.h>#include <Dialogs.h>#include <Events.h>#include <Devices.h>#include <Scrap.h>#include <GestaltEqu.h>#include <Traps.h>#include <PictUtils.h>#include <Palettes.h>#include <QDOffscreen.h>#include <TextUtils.h>#include <StandardFile.h>#include <AppleEvents.h>#include <Processes.h>#include <Resources.h>#include <Fonts.h>#include <ToolUtils.h>#include <Icons.h>#include <Menus.h>#include <Sound.h>// -----------------------------------------------------------------------------// Constants & Macros// -----------------------------------------------------------------------------#define DBG_REPORT_DLOG_ID	1555#define DBG_DISPOSE_DLOG_ID	1556#define DBG_FILE_NAME		"_mr_mem_dbg_"// comment out this line if you don't want memory debugging//#define USE_MEMORY_DEBUG#ifdef USE_MEMORY_DEBUG	// use these defines if we're in debug mode	#define DBG_NewPtr(size) _dbg_NewPtr(size, __FILE__, __LINE__)	#define DBG_NewPtrClear(size) _dbg_NewPtrClear(size, __FILE__, __LINE__)	#define DBG_DisposePtr(ptr) _dbg_DisposePtr(ptr, __FILE__, __LINE__)	#define DBG_NewHandle(size) _dbg_NewHandle(size, __FILE__, __LINE__)	#define DBG_NewHandleClear(size) _dbg_NewHandleClear(size, __FILE__, __LINE__)	#define DBG_DisposeHandle(hand) _dbg_DisposeHandle(hand, __FILE__, __LINE__)	#define InitMemoryDebug(dumpFileName) _dbg_InitMemoryDebug(dumpFileName)	#define EndMemoryDebug(reportLeaks) _dbg_EndMemoryDebug(reportLeaks, __FILE__, __LINE__)#endif#ifndef USE_MEMORY_DEBUG	// and these if we're not	#define DBG_NewPtr(size) NewPtr(size)	#define DBG_NewPtrClear(size) NewPtrClear(size)	#define DBG_DisposePtr(ptr) DisposePtr(ptr)	#define DBG_NewHandle(size) NewHandle(size)	#define DBG_NewHandleClear(size) NewHandleClear(size)	#define DBG_DisposeHandle(hand) DisposeHandle(hand)	#define InitMemoryDebug(dumpFileName) (void)0	#define EndMemoryDebug(reportLeaks) (void)0#endif// -----------------------------------------------------------------------------// Data Structures// -----------------------------------------------------------------------------// -----------------------------------------------------------------------------// Global Data// -----------------------------------------------------------------------------// -----------------------------------------------------------------------------// Function Prototypes// -----------------------------------------------------------------------------// never call these directly: use the macros!void _dbg_InitMemoryDebug( char* dumpFileName );void _dbg_EndMemoryDebug( Boolean reportLeaks, char* fileName, int lineNo );Ptr _dbg_NewPtr( Size size, char* fileName, int lineNo );Ptr _dbg_NewPtrClear( Size size, char* fileName, int lineNo );void _dbg_DisposePtr( Ptr ptr, char* fileName, int lineNo );Handle _dbg_NewHandle( Size size, char* fileName, int lineNo );Handle _dbg_NewHandleClear( Size size, char* fileName, int lineNo );void _dbg_DisposeHandle( Handle hand, char* fileName, int lineNo );// -----------------------------------------------------------------------------// Functions// -----------------------------------------------------------------------------