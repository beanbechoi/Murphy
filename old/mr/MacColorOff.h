// Murphy's Revenge// (c)1997 Q Software / Dave Peck, All Rights Reserved// This source code is confidential and proprietary, and may not be reproduced// or utilized by anyone without the express written permission of Q Software.// File: MacColorOff.h// Auth: Dave Peck// Date: 8/5/96// Desc: Offscreen utility routines#include <QDOffscreen.h>// Change gworld_depth to 0 for 16-bit worlds, which take up more memory// but look pertier. (that is, if you're in 16-bit mode.)#define GWORLD_DEPTH		8#define MAC_DEPTH			8#define MASK_DEPTH			1#define CURRENT_DEPTH		0// Make an 8-bit GWorldOSErr MacMakeGWorld( Rect worldRect, GWorldPtr *worldPtr );// Make an n-bit GWorld ( if n=0, make a GWorld with current bit depth )OSErr MacMakeGWorldDepth( Rect worldRect, int depth, GWorldPtr *worldPtr );// CopyOffscreenToCurrent - copies the offscreen to the currently active window/dialog,// using, if desired, a mask region.void CopyOffscreenToCurrent( GWorldPtr world, Rect fromRect, Rect toRect, RgnHandle theRgn );// Do just what it says.void CopyOffToOff( GWorldPtr fromWorld, Boolean lockFrom,				   GWorldPtr toWorld, Boolean lockTo,				   Rect fromToRect );				   // Now with lotsa rects!void CopyOffToOffRect( GWorldPtr fromWorld, Boolean lockFrom,				   GWorldPtr toWorld, Boolean lockTo,				   Rect fromRect, Rect toRect );// Destroy an unneeded GWorld.void DestroyGWorld( GWorldPtr *worldPtr );// Copy data from the given GWorld directly to the given window. The rect is // the position where the world data should be positioned in the window; the // entire world is copied in this routine.void CopyEntireWorld( GWorldPtr world, WindowPtr window, Rect rectToCopyTo );// CopyWorldBits copies data from "fromRect" of the World to "toRect" of the Windowvoid CopyWorldBits( GWorldPtr world, WindowPtr window, Rect fromRect, Rect toRect );// CopyBitMapToOffscrreen copies a bitmap data structure onto a GWorld. It copies// the entire bitmap data structure, and put is in the "toRect" of the GWorld.void CopyBitMapToOffscreen( BitMap theBitMap, GWorldPtr world, Rect toRect );// CopyOffscreenToBitMap - reverse of the above, copies a portion of a GWorld// onto an entire BitMap ( "fromRect" specifies rectangle to copy from. )void CopyOffscreenToBitMap( GWorldPtr world, BitMap theBitMap, Rect fromRect ); // DrawPictureToWorld - draw a picture into a world.void DrawPictureToWorld( GWorldPtr world, PicHandle picture );